// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// InterviewsColumns holds the columns for the "interviews" table.
	InterviewsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeString, Unique: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "user_id", Type: field.TypeUint64},
		{Name: "position", Type: field.TypeString},
		{Name: "experience", Type: field.TypeString, Nullable: true},
		{Name: "language", Type: field.TypeString},
		{Name: "voice_id", Type: field.TypeString, Nullable: true},
		{Name: "speed", Type: field.TypeInt32, Default: 1},
		{Name: "skills", Type: field.TypeJSON, Nullable: true},
		{Name: "skills_score", Type: field.TypeJSON, Nullable: true},
		{Name: "skip_code", Type: field.TypeBool, Default: false},
		{Name: "total_questions", Type: field.TypeInt32, Default: 10},
		{Name: "remaining_questions", Type: field.TypeInt32, Default: 10},
		{Name: "total_score", Type: field.TypeJSON, Nullable: true},
		{Name: "overall_score", Type: field.TypeFloat64, Default: 0},
		{Name: "positive_feedback", Type: field.TypeString, Nullable: true},
		{Name: "actionable_feedback", Type: field.TypeString, Nullable: true},
		{Name: "final_comment", Type: field.TypeString, Nullable: true},
		{Name: "status", Type: field.TypeInt32},
	}
	// InterviewsTable holds the schema information for the "interviews" table.
	InterviewsTable = &schema.Table{
		Name:       "interviews",
		Columns:    InterviewsColumns,
		PrimaryKey: []*schema.Column{InterviewsColumns[0]},
	}
	// InterviewFavoritesColumns holds the columns for the "interview_favorites" table.
	InterviewFavoritesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "user_id", Type: field.TypeUint64},
		{Name: "interview_id", Type: field.TypeString},
	}
	// InterviewFavoritesTable holds the schema information for the "interview_favorites" table.
	InterviewFavoritesTable = &schema.Table{
		Name:       "interview_favorites",
		Columns:    InterviewFavoritesColumns,
		PrimaryKey: []*schema.Column{InterviewFavoritesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "interview_favorites_interviews_favorites",
				Columns:    []*schema.Column{InterviewFavoritesColumns[4]},
				RefColumns: []*schema.Column{InterviewsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// QuestionsColumns holds the columns for the "questions" table.
	QuestionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "question_index", Type: field.TypeInt32},
		{Name: "content", Type: field.TypeString, Size: 2147483647},
		{Name: "audio", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "lipsync", Type: field.TypeJSON, Nullable: true},
		{Name: "answer", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "record_proof", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "comment", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "score", Type: field.TypeString, Nullable: true},
		{Name: "status", Type: field.TypeInt32},
		{Name: "interview_id", Type: field.TypeString},
	}
	// QuestionsTable holds the schema information for the "questions" table.
	QuestionsTable = &schema.Table{
		Name:       "questions",
		Columns:    QuestionsColumns,
		PrimaryKey: []*schema.Column{QuestionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "questions_interviews_questions",
				Columns:    []*schema.Column{QuestionsColumns[12]},
				RefColumns: []*schema.Column{InterviewsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		InterviewsTable,
		InterviewFavoritesTable,
		QuestionsTable,
	}
)

func init() {
	InterviewFavoritesTable.ForeignKeys[0].RefTable = InterviewsTable
	QuestionsTable.ForeignKeys[0].RefTable = InterviewsTable
}
